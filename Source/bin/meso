#!/bin/bash

# [meso]
# Meso in the Middle (v0.1.0)
# http://github.com/keeto/meso
#
# Copyright 2010, Mark Obcena <keetology.com>
# Released under an MIT-Style License
#

# Local option overrides
MESO_DIR="$(dirname $0)/.."					# Directory of the runner
MESO_LIB="$MESO_DIR/lib/"					# Directory of the library
MESO_ADP="$MESO_DIR/engines/"				# Directory of the engine adapters

# Source the Meso Bash Libray
. "$MESO_LIB/meso.sh"

# Supported Engines
MESO_ENGINES="flusspferd node ringo v8cgi"	# List of supported engines

# Usage notes
usage(){
	echo 'usage: meso [options] script'
	echo 'do meso --help for more information.'
}

helptext(){
	echo "Meso: The CommonJS Runner (v0.1.0)

usage: meso [options] script

Options
  -e, --engine        The name of the CommonJS engine to use
  --noboot            Disables bootstrapping of the global Engine object
  -s, --silent        Silences all output from meso (not the engine)
"
}


# Parse arguments to the runner
parse_runner_args(){
	. "$MESO_LIB/getoptx.sh"
	export OPTERR=0
	while getoptex "s; silent; noboot; e: engine:" "$@"
	do
		case "$OPTOPT" in
			e|engine) TEFLAG=1; MESO_TARGET="$OPTARG";;
			s|silent) MESO_SILENT=1;;
			nobooth) MESO_BOOTSTRAP=0;;
			?) usage; exit;;
		esac
	done
	shift $[OPTIND-1]
	ARGS=$@
}



# Start of Actual Processing
if [[ -z "$1" ]]; then usage; exit; fi
if [[ $1 == '--help' || $1 == '-h' ]]; then helptext; exit; fi

meso_load_config
parse_runner_args $@

if [[ -z "$ARGS" ]]; then
	usage
	exit
else
	meso_check_engines
	meso_execute_script
fi

